# @package _global_

estimator:
  _target_: mutinfo.estimators.parametric.mine.MINE
  backbone_factory:
    _target_: mutinfo.estimators.parametric.mine.GenericConv2dClassifier
    _partial_: true
    hidden_dim: 16
    n_filters: 16
  optimizer_factory:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 1.0e-3
  loss_factory:
    _target_: torchfd.loss.InfoNCELoss
    _partial_: true
  marginalizer_factory:
    _target_: torchfd.mutual_information.OuterProductMarginalizer
    _partial_: true
  n_train_steps: 10000
  train_batch_size: 512
  estimate_batch_size: 512
  estimate_fraction: 0.5 # `null` for no splitting.
  device: "cuda"

parameters_counter:
  _target_: builtins.eval
  _args_: ["lambda estimator, x, y: sum(parameters.numel() for parameters in estimator.backbone_factory(x.shape, y.shape).parameters())"]

estimator_key: Conv2d-NWJ/hidden=${estimator.backbone_factory.hidden_dim}/filters=${estimator.backbone_factory.n_filters}

hydra:
  sweeper:
    params:
      ++estimator.backbone_factory.n_filters: 8, 16
      #++estimator.estimator.estimate_fraction: null, 0.5
      #++estimator.backbone_factory.hidden_dim: 8, 16, 32
      #++estimator.backbone_factory.n_filters: 8, 16, 32, 64, 128